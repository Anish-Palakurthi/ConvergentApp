{"ast":null,"code":"\n\n'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _wrapNativeSuper = require(\"@babel/runtime/helpers/wrapNativeSuper\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar SyntheticError = function (_Error) {\n  _inherits(SyntheticError, _Error);\n  var _super = _createSuper(SyntheticError);\n  function SyntheticError() {\n    var _this;\n    _classCallCheck(this, SyntheticError);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.name = '';\n    return _this;\n  }\n  return _createClass(SyntheticError);\n}(_wrapNativeSuper(Error));\nvar userExceptionDecorator;\nvar inUserExceptionDecorator = false;\n\nfunction unstable_setExceptionDecorator(exceptionDecorator) {\n  userExceptionDecorator = exceptionDecorator;\n}\nfunction preprocessException(data) {\n  if (userExceptionDecorator && !inUserExceptionDecorator) {\n    inUserExceptionDecorator = true;\n    try {\n      return userExceptionDecorator(data);\n    } catch (_unused) {\n    } finally {\n      inUserExceptionDecorator = false;\n    }\n  }\n  return data;\n}\n\nvar exceptionID = 0;\nfunction reportException(e, isFatal, reportToConsole) {\n  var parseErrorStack = require(\"./Devtools/parseErrorStack\");\n  var stack = parseErrorStack(e == null ? void 0 : e.stack);\n  var currentExceptionID = ++exceptionID;\n  var originalMessage = e.message || '';\n  var message = originalMessage;\n  if (e.componentStack != null) {\n    message += \"\\n\\nThis error is located at:\" + e.componentStack;\n  }\n  var namePrefix = e.name == null || e.name === '' ? '' : e.name + \": \";\n  if (!message.startsWith(namePrefix)) {\n    message = namePrefix + message;\n  }\n  message = e.jsEngine == null ? message : message + \", js engine: \" + e.jsEngine;\n  var data = preprocessException({\n    message: message,\n    originalMessage: message === originalMessage ? null : originalMessage,\n    name: e.name == null || e.name === '' ? null : e.name,\n    componentStack: typeof e.componentStack === 'string' ? e.componentStack : null,\n    stack: stack,\n    id: currentExceptionID,\n    isFatal: isFatal,\n    extraData: {\n      jsEngine: e.jsEngine,\n      rawStack: e.stack\n    }\n  });\n  if (reportToConsole) {\n    console.error(data.message);\n  }\n  if (__DEV__) {\n    var LogBox = require(\"../LogBox/LogBox\");\n    LogBox.addException(_objectSpread(_objectSpread({}, data), {}, {\n      isComponentError: !!e.isComponentError\n    }));\n  } else if (isFatal || e.type !== 'warn') {\n    var NativeExceptionsManager = require(\"./NativeExceptionsManager\").default;\n    if (NativeExceptionsManager) {\n      NativeExceptionsManager.reportException(data);\n    }\n  }\n}\nvar inExceptionHandler = false;\n\nfunction handleException(e, isFatal) {\n  var error;\n  if (e instanceof Error) {\n    error = e;\n  } else {\n    error = new SyntheticError(e);\n  }\n  try {\n    inExceptionHandler = true;\n    reportException(error, isFatal, true);\n  } finally {\n    inExceptionHandler = false;\n  }\n}\n\nfunction reactConsoleErrorHandler() {\n  var _console;\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  (_console = console)._errorOriginal.apply(_console, args);\n  if (!console.reportErrorsAsExceptions) {\n    return;\n  }\n  if (inExceptionHandler) {\n    return;\n  }\n  var error;\n  var firstArg = args[0];\n  if (firstArg != null && firstArg.stack) {\n    error = firstArg;\n  } else {\n    var stringifySafe = require(\"../Utilities/stringifySafe\").default;\n    if (typeof firstArg === 'string' && firstArg.startsWith('Warning: ')) {\n      return;\n    }\n    var message = args.map(function (arg) {\n      return typeof arg === 'string' ? arg : stringifySafe(arg);\n    }).join(' ');\n    error = new SyntheticError(message);\n    error.name = 'console.error';\n  }\n  reportException(\n  error, false,\n  false);\n}\n\nfunction installConsoleErrorReporter() {\n  if (console._errorOriginal) {\n    return;\n  }\n  console._errorOriginal = console.error.bind(console);\n  console.error = reactConsoleErrorHandler;\n  if (console.reportErrorsAsExceptions === undefined) {\n    console.reportErrorsAsExceptions = true;\n  }\n}\nmodule.exports = {\n  handleException: handleException,\n  installConsoleErrorReporter: installConsoleErrorReporter,\n  SyntheticError: SyntheticError,\n  unstable_setExceptionDecorator: unstable_setExceptionDecorator\n};","map":{"version":3,"names":["SyntheticError","name","Error","userExceptionDecorator","inUserExceptionDecorator","unstable_setExceptionDecorator","exceptionDecorator","preprocessException","data","exceptionID","reportException","e","isFatal","reportToConsole","parseErrorStack","require","stack","currentExceptionID","originalMessage","message","componentStack","namePrefix","startsWith","jsEngine","id","extraData","rawStack","console","error","__DEV__","LogBox","addException","isComponentError","type","NativeExceptionsManager","default","inExceptionHandler","handleException","reactConsoleErrorHandler","args","_errorOriginal","reportErrorsAsExceptions","firstArg","stringifySafe","map","arg","join","installConsoleErrorReporter","bind","undefined","module","exports"],"sources":["C:/Users/kvnem/ConvergentApp/node_modules/react-native/Libraries/Core/ExceptionsManager.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n */\r\n\r\n'use strict';\r\n\r\nimport type {ExtendedError} from './ExtendedError';\r\nimport type {ExceptionData} from './NativeExceptionsManager';\r\n\r\nclass SyntheticError extends Error {\r\n  name: string = '';\r\n}\r\n\r\ntype ExceptionDecorator = ExceptionData => ExceptionData;\r\n\r\nlet userExceptionDecorator: ?ExceptionDecorator;\r\nlet inUserExceptionDecorator = false;\r\n\r\n/**\r\n * Allows the app to add information to the exception report before it is sent\r\n * to native. This API is not final.\r\n */\r\n\r\nfunction unstable_setExceptionDecorator(\r\n  exceptionDecorator: ?ExceptionDecorator,\r\n) {\r\n  userExceptionDecorator = exceptionDecorator;\r\n}\r\n\r\nfunction preprocessException(data: ExceptionData): ExceptionData {\r\n  if (userExceptionDecorator && !inUserExceptionDecorator) {\r\n    inUserExceptionDecorator = true;\r\n    try {\r\n      return userExceptionDecorator(data);\r\n    } catch {\r\n      // Fall through\r\n    } finally {\r\n      inUserExceptionDecorator = false;\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\n/**\r\n * Handles the developer-visible aspect of errors and exceptions\r\n */\r\nlet exceptionID = 0;\r\nfunction reportException(\r\n  e: ExtendedError,\r\n  isFatal: boolean,\r\n  reportToConsole: boolean, // only true when coming from handleException; the error has not yet been logged\r\n) {\r\n  const parseErrorStack = require('./Devtools/parseErrorStack');\r\n  const stack = parseErrorStack(e?.stack);\r\n  const currentExceptionID = ++exceptionID;\r\n  const originalMessage = e.message || '';\r\n  let message = originalMessage;\r\n  if (e.componentStack != null) {\r\n    message += `\\n\\nThis error is located at:${e.componentStack}`;\r\n  }\r\n  const namePrefix = e.name == null || e.name === '' ? '' : `${e.name}: `;\r\n\r\n  if (!message.startsWith(namePrefix)) {\r\n    message = namePrefix + message;\r\n  }\r\n\r\n  message =\r\n    e.jsEngine == null ? message : `${message}, js engine: ${e.jsEngine}`;\r\n\r\n  const data = preprocessException({\r\n    message,\r\n    originalMessage: message === originalMessage ? null : originalMessage,\r\n    name: e.name == null || e.name === '' ? null : e.name,\r\n    componentStack:\r\n      typeof e.componentStack === 'string' ? e.componentStack : null,\r\n    stack,\r\n    id: currentExceptionID,\r\n    isFatal,\r\n    extraData: {\r\n      jsEngine: e.jsEngine,\r\n      rawStack: e.stack,\r\n    },\r\n  });\r\n\r\n  if (reportToConsole) {\r\n    // we feed back into console.error, to make sure any methods that are\r\n    // monkey patched on top of console.error are called when coming from\r\n    // handleException\r\n    console.error(data.message);\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const LogBox = require('../LogBox/LogBox');\r\n    LogBox.addException({\r\n      ...data,\r\n      isComponentError: !!e.isComponentError,\r\n    });\r\n  } else if (isFatal || e.type !== 'warn') {\r\n    const NativeExceptionsManager =\r\n      require('./NativeExceptionsManager').default;\r\n    if (NativeExceptionsManager) {\r\n      NativeExceptionsManager.reportException(data);\r\n    }\r\n  }\r\n}\r\n\r\ndeclare var console: typeof console & {\r\n  _errorOriginal: typeof console.error,\r\n  reportErrorsAsExceptions: boolean,\r\n  ...\r\n};\r\n\r\n// If we trigger console.error _from_ handleException,\r\n// we do want to make sure that console.error doesn't trigger error reporting again\r\nlet inExceptionHandler = false;\r\n\r\n/**\r\n * Logs exceptions to the (native) console and displays them\r\n */\r\nfunction handleException(e: mixed, isFatal: boolean) {\r\n  let error: Error;\r\n  if (e instanceof Error) {\r\n    error = e;\r\n  } else {\r\n    // Workaround for reporting errors caused by `throw 'some string'`\r\n    // Unfortunately there is no way to figure out the stacktrace in this\r\n    // case, so if you ended up here trying to trace an error, look for\r\n    // `throw '<error message>'` somewhere in your codebase.\r\n    error = new SyntheticError(e);\r\n  }\r\n  try {\r\n    inExceptionHandler = true;\r\n    /* $FlowFixMe[class-object-subtyping] added when improving typing for this\r\n     * parameters */\r\n    reportException(error, isFatal, /*reportToConsole*/ true);\r\n  } finally {\r\n    inExceptionHandler = false;\r\n  }\r\n}\r\n\r\n/* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\r\n * LTI update could not be added via codemod */\r\nfunction reactConsoleErrorHandler(...args) {\r\n  // bubble up to any original handlers\r\n  console._errorOriginal(...args);\r\n  if (!console.reportErrorsAsExceptions) {\r\n    return;\r\n  }\r\n  if (inExceptionHandler) {\r\n    // The fundamental trick here is that are multiple entry point to logging errors:\r\n    // (see D19743075 for more background)\r\n    //\r\n    // 1. An uncaught exception being caught by the global handler\r\n    // 2. An error being logged throw console.error\r\n    //\r\n    // However, console.error is monkey patched multiple times: by this module, and by the\r\n    // DevTools setup that sends messages to Metro.\r\n    // The patching order cannot be relied upon.\r\n    //\r\n    // So, some scenarios that are handled by this flag:\r\n    //\r\n    // Logging an error:\r\n    // 1. console.error called from user code\r\n    // 2. (possibly) arrives _first_ at DevTool handler, send to Metro\r\n    // 3. Bubbles to here\r\n    // 4. goes into report Exception.\r\n    // 5. should not trigger console.error again, to avoid looping / logging twice\r\n    // 6. should still bubble up to original console\r\n    //    (which might either be console.log, or the DevTools handler in case it patched _earlier_ and (2) didn't happen)\r\n    //\r\n    // Throwing an uncaught exception:\r\n    // 1. exception thrown\r\n    // 2. picked up by handleException\r\n    // 3. should be send to console.error (not console._errorOriginal, as DevTools might have patched _later_ and it needs to send it to Metro)\r\n    // 4. that _might_ bubble again to the `reactConsoleErrorHandle` defined here\r\n    //    -> should not handle exception _again_, to avoid looping / showing twice (this code branch)\r\n    // 5. should still bubble up to original console (which might either be console.log, or the DevTools handler in case that one patched _earlier_)\r\n    return;\r\n  }\r\n\r\n  let error;\r\n\r\n  const firstArg = args[0];\r\n  if (firstArg?.stack) {\r\n    // reportException will console.error this with high enough fidelity.\r\n    error = firstArg;\r\n  } else {\r\n    const stringifySafe = require('../Utilities/stringifySafe').default;\r\n    if (typeof firstArg === 'string' && firstArg.startsWith('Warning: ')) {\r\n      // React warnings use console.error so that a stack trace is shown, but\r\n      // we don't (currently) want these to show a redbox\r\n      // (Note: Logic duplicated in polyfills/console.js.)\r\n      return;\r\n    }\r\n    const message = args\r\n      .map(arg => (typeof arg === 'string' ? arg : stringifySafe(arg)))\r\n      .join(' ');\r\n\r\n    error = new SyntheticError(message);\r\n    error.name = 'console.error';\r\n  }\r\n\r\n  reportException(\r\n    /* $FlowFixMe[class-object-subtyping] added when improving typing for this\r\n     * parameters */\r\n    error,\r\n    false, // isFatal\r\n    false, // reportToConsole\r\n  );\r\n}\r\n\r\n/**\r\n * Shows a redbox with stacktrace for all console.error messages.  Disable by\r\n * setting `console.reportErrorsAsExceptions = false;` in your app.\r\n */\r\nfunction installConsoleErrorReporter() {\r\n  // Enable reportErrorsAsExceptions\r\n  if (console._errorOriginal) {\r\n    return; // already installed\r\n  }\r\n  // Flow doesn't like it when you set arbitrary values on a global object\r\n  console._errorOriginal = console.error.bind(console);\r\n  console.error = reactConsoleErrorHandler;\r\n  if (console.reportErrorsAsExceptions === undefined) {\r\n    // Individual apps can disable this\r\n    // Flow doesn't like it when you set arbitrary values on a global object\r\n    console.reportErrorsAsExceptions = true;\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  handleException,\r\n  installConsoleErrorReporter,\r\n  SyntheticError,\r\n  unstable_setExceptionDecorator,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}