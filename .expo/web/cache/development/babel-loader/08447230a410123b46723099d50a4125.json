{"ast":null,"code":"\n\n'use strict';\n\nvar invariant = require('invariant');\nvar TRACE_TAG_REACT_APPS = 1 << 17;\nvar TRACE_TAG_JS_VM_CALLS = 1 << 27;\n\nvar _enabled = false;\nvar _asyncCookie = 0;\nvar _markStack = [];\nvar _markStackIndex = -1;\nvar _canInstallReactHook = false;\n\nvar REACT_MARKER = \"\\u269B\";\nvar userTimingPolyfill = __DEV__ ? {\n  mark: function mark(markName) {\n    if (_enabled) {\n      _markStackIndex++;\n      _markStack[_markStackIndex] = markName;\n      var systraceLabel = markName;\n      if (markName[0] === REACT_MARKER) {\n        var indexOfId = markName.lastIndexOf(' (#');\n        var cutoffIndex = indexOfId !== -1 ? indexOfId : markName.length;\n        systraceLabel = markName.slice(2, cutoffIndex);\n      }\n      Systrace.beginEvent(systraceLabel);\n    }\n  },\n  measure: function measure(measureName, startMark, endMark) {\n    if (_enabled) {\n      invariant(typeof measureName === 'string' && typeof startMark === 'string' && typeof endMark === 'undefined', 'Only performance.measure(string, string) overload is supported.');\n      var topMark = _markStack[_markStackIndex];\n      invariant(startMark === topMark, 'There was a mismatching performance.measure() call. ' + 'Expected \"%s\" but got \"%s.\"', topMark, startMark);\n      _markStackIndex--;\n      Systrace.endEvent();\n    }\n  },\n  clearMarks: function clearMarks(markName) {\n    if (_enabled) {\n      if (_markStackIndex === -1) {\n        return;\n      }\n      if (markName === _markStack[_markStackIndex]) {\n        if (userTimingPolyfill != null) {\n          userTimingPolyfill.measure(markName, markName);\n        }\n      }\n    }\n  },\n  clearMeasures: function clearMeasures() {\n  }\n} : null;\nfunction installPerformanceHooks(polyfill) {\n  if (polyfill) {\n    if (global.performance === undefined) {\n      global.performance = {};\n    }\n    Object.keys(polyfill).forEach(function (methodName) {\n      if (typeof global.performance[methodName] !== 'function') {\n        global.performance[methodName] = polyfill[methodName];\n      }\n    });\n  }\n}\nvar Systrace = {\n  installReactHook: function installReactHook() {\n    if (_enabled) {\n      if (__DEV__) {\n        installPerformanceHooks(userTimingPolyfill);\n      }\n    }\n    _canInstallReactHook = true;\n  },\n  setEnabled: function setEnabled(enabled) {\n    if (_enabled !== enabled) {\n      if (__DEV__) {\n        if (enabled) {\n          global.nativeTraceBeginLegacy && global.nativeTraceBeginLegacy(TRACE_TAG_JS_VM_CALLS);\n        } else {\n          global.nativeTraceEndLegacy && global.nativeTraceEndLegacy(TRACE_TAG_JS_VM_CALLS);\n        }\n        if (_canInstallReactHook) {\n          if (enabled) {\n            installPerformanceHooks(userTimingPolyfill);\n          }\n        }\n      }\n      _enabled = enabled;\n    }\n  },\n  isEnabled: function isEnabled() {\n    return _enabled;\n  },\n  beginEvent: function beginEvent(profileName, args) {\n    if (_enabled) {\n      var profileNameString = typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS, profileNameString, args);\n    }\n  },\n  endEvent: function endEvent() {\n    if (_enabled) {\n      global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);\n    }\n  },\n  beginAsyncEvent: function beginAsyncEvent(profileName) {\n    var cookie = _asyncCookie;\n    if (_enabled) {\n      _asyncCookie++;\n      var profileNameString = typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceBeginAsyncSection(TRACE_TAG_REACT_APPS, profileNameString, cookie);\n    }\n    return cookie;\n  },\n  endAsyncEvent: function endAsyncEvent(profileName, cookie) {\n    if (_enabled) {\n      var profileNameString = typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceEndAsyncSection(TRACE_TAG_REACT_APPS, profileNameString, cookie);\n    }\n  },\n  counterEvent: function counterEvent(profileName, value) {\n    if (_enabled) {\n      var profileNameString = typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceCounter && global.nativeTraceCounter(TRACE_TAG_REACT_APPS, profileNameString, value);\n    }\n  }\n};\nif (__DEV__) {\n  global[(global.__METRO_GLOBAL_PREFIX__ || '') + '__SYSTRACE'] = Systrace;\n}\nmodule.exports = Systrace;","map":{"version":3,"names":["invariant","require","TRACE_TAG_REACT_APPS","TRACE_TAG_JS_VM_CALLS","_enabled","_asyncCookie","_markStack","_markStackIndex","_canInstallReactHook","REACT_MARKER","userTimingPolyfill","__DEV__","mark","markName","systraceLabel","indexOfId","lastIndexOf","cutoffIndex","length","slice","Systrace","beginEvent","measure","measureName","startMark","endMark","topMark","endEvent","clearMarks","clearMeasures","installPerformanceHooks","polyfill","global","performance","undefined","Object","keys","forEach","methodName","installReactHook","setEnabled","enabled","nativeTraceBeginLegacy","nativeTraceEndLegacy","isEnabled","profileName","args","profileNameString","nativeTraceBeginSection","nativeTraceEndSection","beginAsyncEvent","cookie","nativeTraceBeginAsyncSection","endAsyncEvent","nativeTraceEndAsyncSection","counterEvent","value","nativeTraceCounter","__METRO_GLOBAL_PREFIX__","module","exports"],"sources":["C:/Users/kvnem/ConvergentApp/node_modules/react-native/Libraries/Performance/Systrace.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nconst invariant = require('invariant');\r\n\r\nconst TRACE_TAG_REACT_APPS = 1 << 17; // eslint-disable-line no-bitwise\r\nconst TRACE_TAG_JS_VM_CALLS = 1 << 27; // eslint-disable-line no-bitwise\r\n\r\nlet _enabled = false;\r\nlet _asyncCookie = 0;\r\nconst _markStack = [];\r\nlet _markStackIndex = -1;\r\nlet _canInstallReactHook = false;\r\n\r\n// Implements a subset of User Timing API necessary for React measurements.\r\n// https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API\r\nconst REACT_MARKER = '\\u269B';\r\nconst userTimingPolyfill = __DEV__\r\n  ? {\r\n      mark(markName: string) {\r\n        if (_enabled) {\r\n          _markStackIndex++;\r\n          _markStack[_markStackIndex] = markName;\r\n          let systraceLabel = markName;\r\n          // Since perf measurements are a shared namespace in User Timing API,\r\n          // we prefix all React results with a React emoji.\r\n          if (markName[0] === REACT_MARKER) {\r\n            // This is coming from React.\r\n            // Removing component IDs keeps trace colors stable.\r\n            const indexOfId = markName.lastIndexOf(' (#');\r\n            const cutoffIndex = indexOfId !== -1 ? indexOfId : markName.length;\r\n            // Also cut off the emoji because it breaks Systrace\r\n            systraceLabel = markName.slice(2, cutoffIndex);\r\n          }\r\n          Systrace.beginEvent(systraceLabel);\r\n        }\r\n      },\r\n      measure(measureName: string, startMark: ?string, endMark: ?string) {\r\n        if (_enabled) {\r\n          invariant(\r\n            typeof measureName === 'string' &&\r\n              typeof startMark === 'string' &&\r\n              typeof endMark === 'undefined',\r\n            'Only performance.measure(string, string) overload is supported.',\r\n          );\r\n          const topMark = _markStack[_markStackIndex];\r\n          invariant(\r\n            startMark === topMark,\r\n            'There was a mismatching performance.measure() call. ' +\r\n              'Expected \"%s\" but got \"%s.\"',\r\n            topMark,\r\n            startMark,\r\n          );\r\n          _markStackIndex--;\r\n          // We can't use more descriptive measureName because Systrace doesn't\r\n          // let us edit labels post factum.\r\n          Systrace.endEvent();\r\n        }\r\n      },\r\n      clearMarks(markName: string) {\r\n        if (_enabled) {\r\n          if (_markStackIndex === -1) {\r\n            return;\r\n          }\r\n          if (markName === _markStack[_markStackIndex]) {\r\n            // React uses this for \"cancelling\" started measurements.\r\n            // Systrace doesn't support deleting measurements, so we just stop them.\r\n            if (userTimingPolyfill != null) {\r\n              userTimingPolyfill.measure(markName, markName);\r\n            }\r\n          }\r\n        }\r\n      },\r\n      clearMeasures() {\r\n        // React calls this to avoid memory leaks in browsers, but we don't keep\r\n        // measurements anyway.\r\n      },\r\n    }\r\n  : null;\r\n\r\nfunction installPerformanceHooks(\r\n  polyfill: null | $TEMPORARY$object<{\r\n    clearMarks(markName: string): void,\r\n    clearMeasures(): void,\r\n    mark(markName: string): void,\r\n    measure(measureName: string, startMark: ?string, endMark: ?string): void,\r\n  }>,\r\n) {\r\n  if (polyfill) {\r\n    if (global.performance === undefined) {\r\n      global.performance = {};\r\n    }\r\n\r\n    Object.keys(polyfill).forEach(methodName => {\r\n      if (typeof global.performance[methodName] !== 'function') {\r\n        global.performance[methodName] = polyfill[methodName];\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nconst Systrace = {\r\n  installReactHook() {\r\n    if (_enabled) {\r\n      if (__DEV__) {\r\n        installPerformanceHooks(userTimingPolyfill);\r\n      }\r\n    }\r\n    _canInstallReactHook = true;\r\n  },\r\n\r\n  setEnabled(enabled: boolean) {\r\n    if (_enabled !== enabled) {\r\n      if (__DEV__) {\r\n        if (enabled) {\r\n          global.nativeTraceBeginLegacy &&\r\n            global.nativeTraceBeginLegacy(TRACE_TAG_JS_VM_CALLS);\r\n        } else {\r\n          global.nativeTraceEndLegacy &&\r\n            global.nativeTraceEndLegacy(TRACE_TAG_JS_VM_CALLS);\r\n        }\r\n        if (_canInstallReactHook) {\r\n          if (enabled) {\r\n            installPerformanceHooks(userTimingPolyfill);\r\n          }\r\n        }\r\n      }\r\n      _enabled = enabled;\r\n    }\r\n  },\r\n\r\n  isEnabled(): boolean {\r\n    return _enabled;\r\n  },\r\n\r\n  /**\r\n   * beginEvent/endEvent for starting and then ending a profile within the same call stack frame\r\n   **/\r\n  beginEvent(\r\n    profileName?: string | (() => string),\r\n    args?: {[string]: string, ...},\r\n  ) {\r\n    if (_enabled) {\r\n      const profileNameString =\r\n        typeof profileName === 'function' ? profileName() : profileName;\r\n      global.nativeTraceBeginSection(\r\n        TRACE_TAG_REACT_APPS,\r\n        profileNameString,\r\n        args,\r\n      );\r\n    }\r\n  },\r\n\r\n  endEvent() {\r\n    if (_enabled) {\r\n      global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * beginAsyncEvent/endAsyncEvent for starting and then ending a profile where the end can either\r\n   * occur on another thread or out of the current stack frame, eg await\r\n   * the returned cookie variable should be used as input into the endAsyncEvent call to end the profile\r\n   **/\r\n  beginAsyncEvent(profileName?: string | (() => string)): number {\r\n    const cookie = _asyncCookie;\r\n    if (_enabled) {\r\n      _asyncCookie++;\r\n      const profileNameString =\r\n        typeof profileName === 'function' ? profileName() : profileName;\r\n      global.nativeTraceBeginAsyncSection(\r\n        TRACE_TAG_REACT_APPS,\r\n        profileNameString,\r\n        cookie,\r\n      );\r\n    }\r\n    return cookie;\r\n  },\r\n\r\n  endAsyncEvent(profileName?: string | (() => string), cookie?: number) {\r\n    if (_enabled) {\r\n      const profileNameString =\r\n        typeof profileName === 'function' ? profileName() : profileName;\r\n      global.nativeTraceEndAsyncSection(\r\n        TRACE_TAG_REACT_APPS,\r\n        profileNameString,\r\n        cookie,\r\n      );\r\n    }\r\n  },\r\n\r\n  /**\r\n   * counterEvent registers the value to the profileName on the systrace timeline\r\n   **/\r\n  counterEvent(profileName?: string | (() => string), value?: number) {\r\n    if (_enabled) {\r\n      const profileNameString =\r\n        typeof profileName === 'function' ? profileName() : profileName;\r\n      global.nativeTraceCounter &&\r\n        global.nativeTraceCounter(\r\n          TRACE_TAG_REACT_APPS,\r\n          profileNameString,\r\n          value,\r\n        );\r\n    }\r\n  },\r\n};\r\n\r\nif (__DEV__) {\r\n  // The metro require polyfill can not have dependencies (true for all polyfills).\r\n  // Ensure that `Systrace` is available in polyfill by exposing it globally.\r\n  global[(global.__METRO_GLOBAL_PREFIX__ || '') + '__SYSTRACE'] = Systrace;\r\n}\r\n\r\nmodule.exports = Systrace;\r\n"],"mappings":";;AAUA,YAAY;;AAEZ,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AAEtC,IAAMC,oBAAoB,GAAG,CAAC,IAAI,EAAE;AACpC,IAAMC,qBAAqB,GAAG,CAAC,IAAI,EAAE;;AAErC,IAAIC,QAAQ,GAAG,KAAK;AACpB,IAAIC,YAAY,GAAG,CAAC;AACpB,IAAMC,UAAU,GAAG,EAAE;AACrB,IAAIC,eAAe,GAAG,CAAC,CAAC;AACxB,IAAIC,oBAAoB,GAAG,KAAK;;AAIhC,IAAMC,YAAY,GAAG,QAAQ;AAC7B,IAAMC,kBAAkB,GAAGC,OAAO,GAC9B;EACEC,IAAI,gBAACC,QAAgB,EAAE;IACrB,IAAIT,QAAQ,EAAE;MACZG,eAAe,EAAE;MACjBD,UAAU,CAACC,eAAe,CAAC,GAAGM,QAAQ;MACtC,IAAIC,aAAa,GAAGD,QAAQ;MAG5B,IAAIA,QAAQ,CAAC,CAAC,CAAC,KAAKJ,YAAY,EAAE;QAGhC,IAAMM,SAAS,GAAGF,QAAQ,CAACG,WAAW,CAAC,KAAK,CAAC;QAC7C,IAAMC,WAAW,GAAGF,SAAS,KAAK,CAAC,CAAC,GAAGA,SAAS,GAAGF,QAAQ,CAACK,MAAM;QAElEJ,aAAa,GAAGD,QAAQ,CAACM,KAAK,CAAC,CAAC,EAAEF,WAAW,CAAC;MAChD;MACAG,QAAQ,CAACC,UAAU,CAACP,aAAa,CAAC;IACpC;EACF,CAAC;EACDQ,OAAO,mBAACC,WAAmB,EAAEC,SAAkB,EAAEC,OAAgB,EAAE;IACjE,IAAIrB,QAAQ,EAAE;MACZJ,SAAS,CACP,OAAOuB,WAAW,KAAK,QAAQ,IAC7B,OAAOC,SAAS,KAAK,QAAQ,IAC7B,OAAOC,OAAO,KAAK,WAAW,EAChC,iEAAiE,CAClE;MACD,IAAMC,OAAO,GAAGpB,UAAU,CAACC,eAAe,CAAC;MAC3CP,SAAS,CACPwB,SAAS,KAAKE,OAAO,EACrB,sDAAsD,GACpD,6BAA6B,EAC/BA,OAAO,EACPF,SAAS,CACV;MACDjB,eAAe,EAAE;MAGjBa,QAAQ,CAACO,QAAQ,EAAE;IACrB;EACF,CAAC;EACDC,UAAU,sBAACf,QAAgB,EAAE;IAC3B,IAAIT,QAAQ,EAAE;MACZ,IAAIG,eAAe,KAAK,CAAC,CAAC,EAAE;QAC1B;MACF;MACA,IAAIM,QAAQ,KAAKP,UAAU,CAACC,eAAe,CAAC,EAAE;QAG5C,IAAIG,kBAAkB,IAAI,IAAI,EAAE;UAC9BA,kBAAkB,CAACY,OAAO,CAACT,QAAQ,EAAEA,QAAQ,CAAC;QAChD;MACF;IACF;EACF,CAAC;EACDgB,aAAa,2BAAG;EAGhB;AACF,CAAC,GACD,IAAI;AAER,SAASC,uBAAuB,CAC9BC,QAKE,EACF;EACA,IAAIA,QAAQ,EAAE;IACZ,IAAIC,MAAM,CAACC,WAAW,KAAKC,SAAS,EAAE;MACpCF,MAAM,CAACC,WAAW,GAAG,CAAC,CAAC;IACzB;IAEAE,MAAM,CAACC,IAAI,CAACL,QAAQ,CAAC,CAACM,OAAO,CAAC,UAAAC,UAAU,EAAI;MAC1C,IAAI,OAAON,MAAM,CAACC,WAAW,CAACK,UAAU,CAAC,KAAK,UAAU,EAAE;QACxDN,MAAM,CAACC,WAAW,CAACK,UAAU,CAAC,GAAGP,QAAQ,CAACO,UAAU,CAAC;MACvD;IACF,CAAC,CAAC;EACJ;AACF;AAEA,IAAMlB,QAAQ,GAAG;EACfmB,gBAAgB,8BAAG;IACjB,IAAInC,QAAQ,EAAE;MACZ,IAAIO,OAAO,EAAE;QACXmB,uBAAuB,CAACpB,kBAAkB,CAAC;MAC7C;IACF;IACAF,oBAAoB,GAAG,IAAI;EAC7B,CAAC;EAEDgC,UAAU,sBAACC,OAAgB,EAAE;IAC3B,IAAIrC,QAAQ,KAAKqC,OAAO,EAAE;MACxB,IAAI9B,OAAO,EAAE;QACX,IAAI8B,OAAO,EAAE;UACXT,MAAM,CAACU,sBAAsB,IAC3BV,MAAM,CAACU,sBAAsB,CAACvC,qBAAqB,CAAC;QACxD,CAAC,MAAM;UACL6B,MAAM,CAACW,oBAAoB,IACzBX,MAAM,CAACW,oBAAoB,CAACxC,qBAAqB,CAAC;QACtD;QACA,IAAIK,oBAAoB,EAAE;UACxB,IAAIiC,OAAO,EAAE;YACXX,uBAAuB,CAACpB,kBAAkB,CAAC;UAC7C;QACF;MACF;MACAN,QAAQ,GAAGqC,OAAO;IACpB;EACF,CAAC;EAEDG,SAAS,uBAAY;IACnB,OAAOxC,QAAQ;EACjB,CAAC;EAKDiB,UAAU,sBACRwB,WAAqC,EACrCC,IAA8B,EAC9B;IACA,IAAI1C,QAAQ,EAAE;MACZ,IAAM2C,iBAAiB,GACrB,OAAOF,WAAW,KAAK,UAAU,GAAGA,WAAW,EAAE,GAAGA,WAAW;MACjEb,MAAM,CAACgB,uBAAuB,CAC5B9C,oBAAoB,EACpB6C,iBAAiB,EACjBD,IAAI,CACL;IACH;EACF,CAAC;EAEDnB,QAAQ,sBAAG;IACT,IAAIvB,QAAQ,EAAE;MACZ4B,MAAM,CAACiB,qBAAqB,CAAC/C,oBAAoB,CAAC;IACpD;EACF,CAAC;EAODgD,eAAe,2BAACL,WAAqC,EAAU;IAC7D,IAAMM,MAAM,GAAG9C,YAAY;IAC3B,IAAID,QAAQ,EAAE;MACZC,YAAY,EAAE;MACd,IAAM0C,iBAAiB,GACrB,OAAOF,WAAW,KAAK,UAAU,GAAGA,WAAW,EAAE,GAAGA,WAAW;MACjEb,MAAM,CAACoB,4BAA4B,CACjClD,oBAAoB,EACpB6C,iBAAiB,EACjBI,MAAM,CACP;IACH;IACA,OAAOA,MAAM;EACf,CAAC;EAEDE,aAAa,yBAACR,WAAqC,EAAEM,MAAe,EAAE;IACpE,IAAI/C,QAAQ,EAAE;MACZ,IAAM2C,iBAAiB,GACrB,OAAOF,WAAW,KAAK,UAAU,GAAGA,WAAW,EAAE,GAAGA,WAAW;MACjEb,MAAM,CAACsB,0BAA0B,CAC/BpD,oBAAoB,EACpB6C,iBAAiB,EACjBI,MAAM,CACP;IACH;EACF,CAAC;EAKDI,YAAY,wBAACV,WAAqC,EAAEW,KAAc,EAAE;IAClE,IAAIpD,QAAQ,EAAE;MACZ,IAAM2C,iBAAiB,GACrB,OAAOF,WAAW,KAAK,UAAU,GAAGA,WAAW,EAAE,GAAGA,WAAW;MACjEb,MAAM,CAACyB,kBAAkB,IACvBzB,MAAM,CAACyB,kBAAkB,CACvBvD,oBAAoB,EACpB6C,iBAAiB,EACjBS,KAAK,CACN;IACL;EACF;AACF,CAAC;AAED,IAAI7C,OAAO,EAAE;EAGXqB,MAAM,CAAC,CAACA,MAAM,CAAC0B,uBAAuB,IAAI,EAAE,IAAI,YAAY,CAAC,GAAGtC,QAAQ;AAC1E;AAEAuC,MAAM,CAACC,OAAO,GAAGxC,QAAQ"},"metadata":{},"sourceType":"script"}