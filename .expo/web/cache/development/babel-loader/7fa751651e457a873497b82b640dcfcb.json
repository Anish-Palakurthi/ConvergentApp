{"ast":null,"code":"\n\n'use strict';\n\nvar start = Date.now();\nrequire(\"./setUpGlobals\");\nrequire(\"./setUpPerformance\");\nrequire(\"./setUpSystrace\");\nrequire(\"./setUpErrorHandling\");\nrequire(\"./polyfillPromise\");\nrequire(\"./setUpRegeneratorRuntime\");\nrequire(\"./setUpTimers\");\nrequire(\"./setUpXHR\");\nrequire(\"./setUpAlert\");\nrequire(\"./setUpNavigator\");\nrequire(\"./setUpBatchedBridge\");\nrequire(\"./setUpSegmentFetcher\");\nif (__DEV__) {\n  require(\"./checkNativeVersion\");\n  require(\"./setUpDeveloperTools\");\n  require(\"../LogBox/LogBox\").install();\n}\nvar GlobalPerformanceLogger = require(\"../Utilities/GlobalPerformanceLogger\");\nGlobalPerformanceLogger.markPoint('initializeCore_start', GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start));\nGlobalPerformanceLogger.markPoint('initializeCore_end');","map":{"version":3,"names":["start","Date","now","require","__DEV__","install","GlobalPerformanceLogger","markPoint","currentTimestamp"],"sources":["C:/Users/kvnem/ConvergentApp/node_modules/react-native/Libraries/Core/InitializeCore.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n */\r\n\r\n/**\r\n * Sets up global variables typical in most JavaScript environments.\r\n *\r\n *   1. Global timers (via `setTimeout` etc).\r\n *   2. Global console object.\r\n *   3. Hooks for printing stack traces with source maps.\r\n *\r\n * Leaves enough room in the environment for implementing your own:\r\n *\r\n *   1. Require system.\r\n *   2. Bridged modules.\r\n *\r\n */\r\n\r\n'use strict';\r\n\r\nconst start = Date.now();\r\n\r\nrequire('./setUpGlobals');\r\nrequire('./setUpPerformance');\r\nrequire('./setUpSystrace');\r\nrequire('./setUpErrorHandling');\r\nrequire('./polyfillPromise');\r\nrequire('./setUpRegeneratorRuntime');\r\nrequire('./setUpTimers');\r\nrequire('./setUpXHR');\r\nrequire('./setUpAlert');\r\nrequire('./setUpNavigator');\r\nrequire('./setUpBatchedBridge');\r\nrequire('./setUpSegmentFetcher');\r\nif (__DEV__) {\r\n  require('./checkNativeVersion');\r\n  require('./setUpDeveloperTools');\r\n  require('../LogBox/LogBox').install();\r\n}\r\n\r\nconst GlobalPerformanceLogger = require('../Utilities/GlobalPerformanceLogger');\r\n// We could just call GlobalPerformanceLogger.markPoint at the top of the file,\r\n// but then we'd be excluding the time it took to require the logger.\r\n// Instead, we just use Date.now and backdate the timestamp.\r\nGlobalPerformanceLogger.markPoint(\r\n  'initializeCore_start',\r\n  GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start),\r\n);\r\nGlobalPerformanceLogger.markPoint('initializeCore_end');\r\n"],"mappings":";;AAwBA,YAAY;;AAEZ,IAAMA,KAAK,GAAGC,IAAI,CAACC,GAAG,EAAE;AAExBC,OAAO,kBAAkB;AACzBA,OAAO,sBAAsB;AAC7BA,OAAO,mBAAmB;AAC1BA,OAAO,wBAAwB;AAC/BA,OAAO,qBAAqB;AAC5BA,OAAO,6BAA6B;AACpCA,OAAO,iBAAiB;AACxBA,OAAO,cAAc;AACrBA,OAAO,gBAAgB;AACvBA,OAAO,oBAAoB;AAC3BA,OAAO,wBAAwB;AAC/BA,OAAO,yBAAyB;AAChC,IAAIC,OAAO,EAAE;EACXD,OAAO,wBAAwB;EAC/BA,OAAO,yBAAyB;EAChCA,OAAO,oBAAoB,CAACE,OAAO,EAAE;AACvC;AAEA,IAAMC,uBAAuB,GAAGH,OAAO,wCAAwC;AAI/EG,uBAAuB,CAACC,SAAS,CAC/B,sBAAsB,EACtBD,uBAAuB,CAACE,gBAAgB,EAAE,IAAIP,IAAI,CAACC,GAAG,EAAE,GAAGF,KAAK,CAAC,CAClE;AACDM,uBAAuB,CAACC,SAAS,CAAC,oBAAoB,CAAC"},"metadata":{},"sourceType":"script"}