{"ast":null,"code":"\n\n'use strict';\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar WebSocketEvent = _createClass(function WebSocketEvent(type, eventInitDict) {\n  _classCallCheck(this, WebSocketEvent);\n  this.type = type.toString();\n  Object.assign(this, eventInitDict);\n});\nmodule.exports = WebSocketEvent;","map":{"version":3,"names":["WebSocketEvent","type","eventInitDict","toString","Object","assign","module","exports"],"sources":["C:/Users/kvnem/ConvergentApp/node_modules/react-native/Libraries/WebSocket/WebSocketEvent.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Event object passed to the `onopen`, `onclose`, `onmessage`, `onerror`\r\n * callbacks of `WebSocket`.\r\n *\r\n * The `type` property is \"open\", \"close\", \"message\", \"error\" respectively.\r\n *\r\n * In case of \"message\", the `data` property contains the incoming data.\r\n */\r\nclass WebSocketEvent {\r\n  constructor(type, eventInitDict) {\r\n    this.type = type.toString();\r\n    Object.assign(this, eventInitDict);\r\n  }\r\n}\r\n\r\nmodule.exports = WebSocketEvent;\r\n"],"mappings":";;AASA,YAAY;;AAAC;AAAA;AAAA,IAUPA,cAAc,gBAClB,wBAAYC,IAAI,EAAEC,aAAa,EAAE;EAAA;EAC/B,IAAI,CAACD,IAAI,GAAGA,IAAI,CAACE,QAAQ,EAAE;EAC3BC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEH,aAAa,CAAC;AACpC,CAAC;AAGHI,MAAM,CAACC,OAAO,GAAGP,cAAc"},"metadata":{},"sourceType":"script"}