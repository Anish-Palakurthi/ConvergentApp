{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport codegenNativeCommands from \"../../Utilities/codegenNativeCommands\";\nimport RCTTextInputViewConfig from \"./RCTTextInputViewConfig\";\nimport * as NativeComponentRegistry from \"../../NativeComponent/NativeComponentRegistry\";\nexport var Commands = codegenNativeCommands({\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection']\n});\nexport var __INTERNAL_VIEW_CONFIG = _objectSpread({\n  uiViewClassName: 'RCTSinglelineTextInputView'\n}, RCTTextInputViewConfig);\nvar SinglelineTextInputNativeComponent = NativeComponentRegistry.get('RCTSinglelineTextInputView', function () {\n  return __INTERNAL_VIEW_CONFIG;\n});\n\nexport default SinglelineTextInputNativeComponent;","map":{"version":3,"names":["codegenNativeCommands","RCTTextInputViewConfig","NativeComponentRegistry","Commands","supportedCommands","__INTERNAL_VIEW_CONFIG","uiViewClassName","SinglelineTextInputNativeComponent","get"],"sources":["C:/Users/kvnem/ConvergentApp/node_modules/react-native/Libraries/Components/TextInput/RCTSingelineTextInputNativeComponent.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n * @format\r\n */\r\n\r\nimport type {\r\n  HostComponent,\r\n  PartialViewConfig,\r\n} from '../../Renderer/shims/ReactNativeTypes';\r\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\r\nimport type {TextInputNativeCommands} from './TextInputNativeCommands';\r\nimport RCTTextInputViewConfig from './RCTTextInputViewConfig';\r\nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\r\n\r\ntype NativeType = HostComponent<mixed>;\r\n\r\ntype NativeCommands = TextInputNativeCommands<NativeType>;\r\n\r\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\r\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection'],\r\n});\r\n\r\nexport const __INTERNAL_VIEW_CONFIG: PartialViewConfig = {\r\n  uiViewClassName: 'RCTSinglelineTextInputView',\r\n  ...RCTTextInputViewConfig,\r\n};\r\n\r\nconst SinglelineTextInputNativeComponent: HostComponent<mixed> =\r\n  NativeComponentRegistry.get<mixed>(\r\n    'RCTSinglelineTextInputView',\r\n    () => __INTERNAL_VIEW_CONFIG,\r\n  );\r\n\r\n// flowlint-next-line unclear-type:off\r\nexport default ((SinglelineTextInputNativeComponent: any): HostComponent<mixed>);\r\n"],"mappings":";;;;AAcA,OAAOA,qBAAqB;AAE5B,OAAOC,sBAAsB;AAC7B,OAAO,KAAKC,uBAAuB;AAMnC,OAAO,IAAMC,QAAwB,GAAGH,qBAAqB,CAAiB;EAC5EI,iBAAiB,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,qBAAqB;AAC5D,CAAC,CAAC;AAEF,OAAO,IAAMC,sBAAyC;EACpDC,eAAe,EAAE;AAA4B,GAC1CL,sBAAsB,CAC1B;AAED,IAAMM,kCAAwD,GAC5DL,uBAAuB,CAACM,GAAG,CACzB,4BAA4B,EAC5B;EAAA,OAAMH,sBAAsB;AAAA,EAC7B;;AAGH,eAAiBE,kCAAkC"},"metadata":{},"sourceType":"module"}